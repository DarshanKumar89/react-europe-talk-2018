import React, { Component } from 'react';
import PropTypes from 'prop-types';

import Canvas from '../Canvas';

class Confetti extends Component {
  static propTypes = {
    width: PropTypes.number.isRequired,
    height: PropTypes.number.isRequired,
    particles: PropTypes.arrayOf(
      PropTypes.object
    ).isRequired,
    onClick: PropTypes.func,
  };

  draw = ctx => {
    const {
      width,
      height,
      particles,
    } = this.props;

    ctx.clearRect(0, 0, width, height);

    particles.forEach(particle => {
      ctx.translate(/* snip */);
      ctx.rotate(/* snip */);
      ctx.scale(/* snip */);

      ctx.drawImage(/* snip */);

      // Undo all of our transformations, so
      // that our context is restored.
      const r = window.devicePixelRatio || 1;
      ctx.setTransform(r, 0, 0, r, 0, 0);
    });
  };

  render() {
    const {
      width,
      height,
      onClick,
    } = this.props;

    return (
      <Canvas
        width={width}
        height={height}
        onClick={onClick}
        draw={this.draw}
      />
    );
  }
}

export default Confetti;
